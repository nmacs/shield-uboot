#define UART_PAD_CTRL         ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_MED  | PAD_CTL_DSE_40ohm                     | PAD_CTL_HYS               )
#define I2C_PAD_CTRL          ( PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_MED  | PAD_CTL_DSE_40ohm                     | PAD_CTL_HYS | PAD_CTL_ODE )
#define SPI_PAD_CTRL          ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_HIGH | PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST                              )
#define SPI_CS_PAD_CTRL       ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_HIGH | PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST                              )
#define SPI_AFE_PAD_CTRL      ( PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_HIGH | PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST                              )
#define SPI_AFE_CS_PAD_CTRL   ( PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_HIGH | PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST                              )

#define ENET_PAD_CTRL         ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_HIGH | PAD_CTL_DSE_48ohm | PAD_CTL_SRE_FAST                              )
#define MDIO_PAD_CTRL         ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_MED  | PAD_CTL_DSE_48ohm | PAD_CTL_SRE_FAST                | PAD_CTL_ODE )
#define MDC_PAD_CTRL          ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_MED  | PAD_CTL_DSE_48ohm | PAD_CTL_SRE_FAST                              )
#define ENET_CLK_PAD_CTRL     ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP   | PAD_CTL_SPEED_LOW  | PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST                              )

#define AFE_IRQ_PAD_CTRL      ( PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN                                                              | PAD_CTL_HYS               )
#define GPIO_IRQ_PAD_CTRL     ( PAD_CTL_PUE | PAD_CTL_PUS_100K_UP                                                                | PAD_CTL_HYS               )

#define GPIO_OUT_PAD_CTRL     ( PAD_CTL_PUE                         | PAD_CTL_SPEED_LOW  | PAD_CTL_DSE_40ohm                                                 )
#define GPIO_IN_PAD_CTRL      (                                       PAD_CTL_SPEED_LOW  | PAD_CTL_DSE_40ohm                     | PAD_CTL_HYS               )
#define GPIO_IO_PAD_CTRL      ( PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_MED  | PAD_CTL_DSE_40ohm                     | PAD_CTL_HYS               )

static iomux_v3_cfg_t const peripheral_pads[] = {
	// UART1
	//
	MX6_PAD_UART1_RX_DATA__UART1_DCE_RX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_UART1_TX_DATA__UART1_DCE_TX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	
	// UART2
	//
	MX6_PAD_UART2_RX_DATA__UART2_DCE_RX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_UART2_TX_DATA__UART2_DCE_TX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	
	// UART3
	//
	MX6_PAD_UART3_RX_DATA__UART3_DCE_RX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_UART3_TX_DATA__UART3_DCE_TX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	
	// UART4
	//
	MX6_PAD_UART4_RX_DATA__UART4_DCE_RX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_UART4_TX_DATA__UART4_DCE_TX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_LCD_HSYNC__UART4_DCE_CTS	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_LCD_VSYNC__UART4_DCE_RTS	| MUX_PAD_CTRL(UART_PAD_CTRL),
	
	// UART5
	//
	MX6_PAD_UART5_RX_DATA__UART5_DCE_RX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_UART5_TX_DATA__UART5_DCE_TX	| MUX_PAD_CTRL(UART_PAD_CTRL),
	
	// FEC1
	//
	MX6_PAD_GPIO1_IO06__ENET1_MDIO			| MUX_PAD_CTRL(MDIO_PAD_CTRL),
	MX6_PAD_GPIO1_IO07__ENET1_MDC			| MUX_PAD_CTRL(MDC_PAD_CTRL),

	MX6_PAD_ENET1_TX_DATA0__ENET1_TDATA00	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_TX_DATA1__ENET1_TDATA01	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_TX_EN__ENET1_TX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_TX_CLK__ENET1_REF_CLK1	| MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),

	MX6_PAD_ENET1_RX_DATA0__ENET1_RDATA00	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_RX_DATA1__ENET1_RDATA01	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_RX_ER__ENET1_RX_ER		| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET1_RX_EN__ENET1_RX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),

	MX6_PAD_LCD_DATA21__GPIO3_IO26			| MUX_PAD_CTRL(NO_PAD_CTRL), // nRESET
	
	// FEC 2
	//
	MX6_PAD_ENET2_TX_DATA0__ENET2_TDATA00	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET2_TX_DATA1__ENET2_TDATA01	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET2_TX_CLK__ENET2_REF_CLK2	| MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),
	MX6_PAD_ENET2_TX_EN__ENET2_TX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),

	MX6_PAD_ENET2_RX_DATA0__ENET2_RDATA00	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET2_RX_DATA1__ENET2_RDATA01	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET2_RX_EN__ENET2_RX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET2_RX_ER__ENET2_RX_ER		| MUX_PAD_CTRL(ENET_PAD_CTRL),

	MX6_PAD_LCD_DATA17__GPIO3_IO22			| MUX_PAD_CTRL(NO_PAD_CTRL), // nRESET
	
	// SPI1
	//
	MX6_PAD_CSI_DATA04__ECSPI1_SCLK			| MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_CSI_DATA06__ECSPI1_MOSI			| MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_CSI_DATA07__ECSPI1_MISO			| MUX_PAD_CTRL(SPI_PAD_CTRL),
	
	// SPI2
	//
	MX6_PAD_CSI_DATA00__ECSPI2_SCLK			| MUX_PAD_CTRL(SPI_AFE_PAD_CTRL),
	MX6_PAD_CSI_DATA02__ECSPI2_MOSI			| MUX_PAD_CTRL(SPI_AFE_PAD_CTRL),
	MX6_PAD_CSI_DATA03__ECSPI2_MISO			| MUX_PAD_CTRL(SPI_AFE_PAD_CTRL),
};
